<Window x:Class="CRUD.MVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CRUD.MVVM"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        
        xmlns:converters="clr-namespace:CRUD.MVVM.Converters"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors">

    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToVisibilityConverter
            x:Key="ReversBoolToVisibilityConverter"
            FalseValue="Visible"
            TrueValue="Collapsed"/>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Button 
            Width="80"
            HorizontalAlignment="Right"
            Content="Search"/>
        <DataGrid x:Name="MemberDataGrid" Grid.Row="1" Margin="0 10 0 0" AutoGenerateColumns="False" IsReadOnly="True"
       ItemsSource="{Binding Members}"> <!--Members Property를 바인딩 하도록 {Binding Members}를 사용함-->
            
            <!-- 
            DataGrid에 SelectionChanged 이벤트가 발생하면, ViewModel의 SelectionChangedCommand를 실행하는데, 
            EventArgs를 CommandParameter로 전달해라 이다.
            -->
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="SeletectionChanged">
                    <b:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                           PassEventArgsToCommand="True"/> 
                    <!--InvokeCommandAction의 PassEventArgsToCommand="True"는 
                    이벤트가 발생할 때 전달되는 EventArgs를 CommandParameter로 전달할지 여부를 지정할 수 있음.-->
                </b:EventTrigger>
            </b:Interaction.Triggers>
           
        <DataGrid.Columns>
            <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}" Header="Name" />
            <DataGridTextColumn Binding="{Binding Phone, Mode=TwoWay}" Header="Phone" />
            <DataGridTextColumn Binding="{Binding RegDate, StringFormat={}{0:d}}" Header="Regested Date" />
            <DataGridCheckBoxColumn Binding="{Binding IsUse, Mode=TwoWay}" Header="Use" />
        </DataGrid.Columns>
    </DataGrid>

        <StackPanel
            Grid.Column="1"
            Margin="0 0 5 0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                x:Name="NewButton"
                Width="80"
                Command="{Binding NewCommand}"
                Content="New"
                Visibility="{Binding IsEditing, Converter={StaticResource ReversBoolToVisibilityConverter}}" />
            <Button
                x:Name="EditButton"
                Width="80"
                Margin="5,0,0,0"
                Command="{Binding EditCommand}"
                Content="Edit"
                Visibility="{Binding IsEditing, Converter={StaticResource ReversBoolToVisibilityConverter}}" />
            <Button
                x:Name="DeleteButton"
                Width="80"
                Margin="5,0,0,0"
                Command="{Binding DeleteCommand}"
                Content="Delete"
                Visibility="{Binding IsEditing, Converter={StaticResource ReversBoolToVisibilityConverter}}" />
            <Button
                x:Name="SaveButton"
                Width="80"
                Command="{Binding SaveCommand}"
                Content="Save"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />
            <Button
                x:Name="CancelButton"
                Width="80"
                Margin="5,0,0,0"
                Command="{Binding CancelCommand}"
                Content="Cancel"
                Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />
        </StackPanel>
        <Grid
            x:Name="DetailGrid"
            Grid.Row="1"
            Grid.Column="1"
            Margin="0 10 0 0"
            IsEnabled="{Binding IsEditing}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.3*"/>
                <ColumnDefinition Width="0.7*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Margin="4" Background="Gray">
                <TextBlock
                    Margin="4 0 0 0"
                    Foreground="White"
                    Text="Id"/>
            </Border>

            <TextBlock
                x:Name="Id"
                Grid.Column="1"
                Margin="4"
                Text="{Binding EditMember.Id}" />
            <Border
                Grid.Row="1"
                Margin="4"
                Background="Gray">
                <TextBlock
                    Margin="4 0 0 0"
                    Foreground="White"
                    Text="Name" />
            </Border>
        </Grid>
    </Grid>
</Window>
